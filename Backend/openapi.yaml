openapi: 3.0.3

info:
  title: LLM Interaction API
  description: This document describes the LLM Interaction API
  version: 2.0.0

tags:
  - name: Conversations
    description: API for managing LLM Chat interactions
  - name: LLM Queries
    description: API for managing LLM Queries

paths:
  /conversations:
    post:
      tags:
        - Conversations
      summary: Creates a new Conversation with an LLM model
      description: |-
        A Conversation describes a series of interactions with an LLM model. It 
        also contains the properties that will be used to send individual queries
        to the LLM. Chat queries will be anonymised and logged for audit 
        purposes
      operationId: create_conversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationPOST'
      responses:
        '201':
          $ref: '#/components/responses/CreatedResponse'
        '400':
          $ref: '#/components/responses/InvalidParametersError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Conversations
      summary: Retrieve a user's Conversation
      description: |-
        Retrieves all the conversations that a user has created, the 
        conversation history is not provided here.
      operationId: get_conversations
      responses:
        '200':
          description: Successfully retrieved a list of Conversations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /conversations/{id}:
    parameters:
      - $ref: '#/components/parameters/IDParam'
    put:
      tags:
        - Conversations
      summary: Updates the LLM properties of a Conversations
      description: |-
        Allows the user to customise parameters and properties of a Conversation,
        thereby customising their experience
      operationId: update_conversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationPUT'
      responses:
        '204':
          $ref: '#/components/responses/UpdatedResponse'
        '400':
          $ref: '#/components/responses/InvalidParametersError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Conversations
      summary: Retrieves the Conversation History
      description: Retrieves the entire conversation history with the LLM
      operationId: get_conversation
      responses:
        '200':
          description: Successfully retrieved a Conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationFull'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Conversations
      summary: Deletes the Conversation
      description: Deletes the entire conversation history with the LLM Model
      operationId: delete_conversation
      responses:
        '204':
          $ref: '#/components/responses/DeletedResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /queries:
    parameters:
      - $ref: '#/components/parameters/IDParam'
    post:
      tags:
        - LLM Queries
      summary: Creates a new Prompt query 
      description: |-
        This action sends a new Prompt query to the LLM and returns
        its response. If any errors occur when sending the prompt to the
        LLM, then a 422 error should be raised.
      operationId: create_prompt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prompt'
      responses:
        '201':
          $ref: '#/components/responses/CreatedResponse'
        '400':
          $ref: '#/components/responses/InvalidParametersError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/InvalidCreationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:

    # Common Schemas
    APIError:
      description: Generic schema for expressing API Errors
      type: object
      properties:
        code:
          description: API Error code associated with the error
          type: integer
          format: int32
        message:
          description: Error message associated with the error
          type: string
        request:
          description: Request details associated with the error
          type: object
        details:
          description: Other details associated with the error
          type: object
      required:
        - code
        - message

    # Chat Schemas
    QueryRoleType:
      type: string
      enum:
        - system
        - user
        - assistant
        - function
      description: |-
        Chat roles for each individual message
        
        system = Message is a system message
        user = Message is a prompt from the user
        assistant = Message is a reply from the LLM model
        function = Message is a function call message
    Prompt:
      description: Prompt interaction structure
      type: object
      properties:
        role:
          $ref: '#/components/schemas/QueryRoleType'
        content:
          description: This is the prompt content of the message
          type: string
          format: text
      required:
        - role
        - content
      additionalProperties: true
    
    Conversation:
      description: Representation of a series of interactions with a particular LLM
      type: object
      properties:
        id:
          description: ID of the conversation
          type: string
          format: uuid
          readOnly: true
        name:
          description: Title of the conversation
          type: string
          maxLength: 200
        params:
          description: |-
            Parameter dictionary for overriding defaults 
            prescribed by the AI Model
          type: object
          additionalProperties: true
        tokens:
          description: Total number of tokens consumed in this entire Chat
          type: integer
          format: int32
          minimum: 0
          readOnly: true
      additionalProperties: true
      required:
        - id
        - name
        - pinned
        - prompts
        - params
        - model
        - tokens
        - modifications
    ConversationFull:
      description: Complete Chat schema with messages
      allOf:
        - $ref: '#/components/schemas/Conversation'
        - description: Includes the messages fields
          type: object
          properties:
            messages:
              description: Chat messages to be included
              type: array
              items:
                $ref: '#/components/schemas/Prompt'
          required:
            - messages
    ConversationPOST:
      description: POST request for creating a new Chat
      properties:
        name:
          description: Title of the conversation
          type: string
          maxLength: 200
        params:
          description: |-
            Parameter dictionary for overriding defaults prescribed 
            by the AI Model, defaults to an empty dictionary
          type: object
          additionalProperties: true
      additionalProperties: true
      required:
        - name
        - model
    ConversationPUT:
      description: PUT request for modifying a Chat
      properties:
        name:
          description: Title of the conversation
          type: string
          maxLength: 200
        params:
          description: |-
            Parameter dictionary for overriding defaults prescribed 
            by the AI Model
          type: object

  parameters:
    IDParam:
      name: id
      description: A unique ID string
      in: path
      required: true
      schema:
        type: string
        format: uuid
    SecondaryIDParam:
      name: secondary_id
      description: A unique ID string
      in: path
      required: true
      schema:
        type: string
        format: uuid
    IDListParam:
      name: ids
      description: A list of optional IDs
      in: query
      schema:
        type: array
        items:
          type: string
          format: uuid
      style: form
      explode: true

  responses:
    CreatedResponse:
      description: Successfully created resource with ID
      content:
        application/vnd.launchpad.v1+json:
          schema:
            description: Generated resource ID
            type: object
            properties:
              id:
                description: Unique ID of the resource
                type: string
                format: uuid
            required:
              - id
    UpdatedResponse:
      description: Successfully updated specified resource
    DeletedResponse:
      description: Successfully deleted specified resource(s)
    InvalidParametersError:
      description: Invalid parameter(s)
      content:
        application/vnd.launchpad.v1+json:
          schema:
            $ref: '#/components/schemas/APIError'
          example:
            code: 400
            message: Invalid parameters provided
    NotFoundError:
      description: Specified resource(s) was not found
      content:
        application/vnd.launchpad.v1+json:
          schema:
            $ref: '#/components/schemas/APIError'
          example:
            code: 404
            message: Specified resource(s) was not found
    InvalidCreationError:
      description: Unable to create resource due to errors
      content:
        application/vnd.launchpad.v1+json:
          schema:
            $ref: '#/components/schemas/APIError'
          example:
            code: 422
            message: Unable to create resource
    InternalServerError:
      description: Internal server error
      content:
        application/vnd.launchpad.v1+json:
          schema:
            $ref: '#/components/schemas/APIError'
          example:
            code: 500
            message: Internal server error

    